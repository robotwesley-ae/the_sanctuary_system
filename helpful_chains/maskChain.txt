# maskChain

Using this knowledge:
{
[How2FlowNodes]: {
**Step1**: ***"What ${subnodes} are needed for EACH ${NODE} to make ${node} a superb ${cluster} representing the [MEMEPLEX] of ${transformation}?"***
[SUBCONTEXT]: ***EACH ENTITY NEEDS ITS _OWN_ NUMBER OF NODES. EACH NODE NEEDS ITS _OWN_ NUMBER OF SUBNODES! Mixed-lvl node abstrctn typical; NUMBER OF SUBNODES/NODE IS HIGHLY VARIABLE! SHOULD NEVER BE ALL THE SAME LENGTH!*** 
**Step2**: `"
${[${EntityType}Chain]}: ${[ChainTargetTransformation]}: ℕ(1.${[Node]}: 1a.${Subnode1a} 1b. ${SubNode1b}...1${[c-z as many as needed for thorough specificity!]} 2.${[Node2]} 2a.${Subnode2a} ... fℕ).
{results}[NodeGraphXTN6 Format] => `${EntityChain}`
"`
**Nodeℕ**: ${As many as needed for comprehensive coverage etc to cover whole CIT set! ℕa...}. ***WHOLE CHAIN ON ONE LINE ONLY! Labels unambiguous&machine readable for metaprogramming***.     
**fℕ**: ${final node the target transformation achieved}
}
}
Create `[MASK]` token metaprompt chains combining `[MASK]` variable token chaining as streamed output
